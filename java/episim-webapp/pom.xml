<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>nl.rivm.cib</groupId>
		<artifactId>episim</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../..</relativePath>
	</parent>

	<artifactId>episim-webapp</artifactId>
	<packaging>war</packaging>

	<properties>
		<jetty.version>9.3.8.v20160314</jetty.version>
		<cxf.version>3.1.6</cxf.version>
	</properties>

	<repositories>
		<repository>
			<name>COALA Public Maven Repository</name>
			<id>coala-public</id>
			<url>https://github.com/krevelen/coala-binder/raw/mvn-repo/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<name>EPISIM Public Maven Repository</name>
			<id>episim-public</id>
			<url>https://github.com/krevelen/rivm-episim/raw/mvn-repo/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>nl.rivm.cib</groupId>
			<artifactId>episim-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<!-- Configure the Maven2 Eclipse IDE Integration (m2e) for non-standard 
						plug-in executions during the compile-test-run life-cycles by the IDE -->
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>

								<!-- Configure "org.codehaus.mojo:exec-maven-plugin:exec" goal execution 
									in Eclipse IDE -->
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>

							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<!-- node dependencies -->
					<execution>
						<id>exec-npm-install</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<taskdef resource="net/sf/antcontrib/antcontrib.properties" />

								<if>
									<available file="npm" />
									<then>
										<echo>NPM exists</echo>
									</then>

									<else>
										<echo>NPM unavailable</echo>
									</else>
								</if>
							</tasks>

							<target>
								<exec executable="cmd.exe" failOnError="true">
									<arg line="/c npm install" />
								</exec>
							</target>
						</configuration>
					</execution>
					<!-- browser-compatible node dependencies -->
					<execution>
						<id>exec-bower-install</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<!-- <exec executable="cmd.exe"> <arg line="/c npm install -g bower" 
									/> </exec> -->
								<exec executable="cmd.exe" failOnError="true">
									<arg value="/c bower install" />
								</exec>
							</target>
						</configuration>
					</execution>
					<!-- grunt-browserify (bundle, uglify, etc.) -->
					<!-- <execution> <id>exec-grunt</id> <phase>process-resources</phase> 
						<goals> <goal>run</goal> </goals> <configuration> <target> <exec executable="cmd.exe" 
						failOnError="true"> <arg line="/c grunt" /> </exec> </target> </configuration> 
						</execution> -->
				</executions>
				<dependencies>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>20020829</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<!-- jetty:run starts the JAX-RS webapp in a Jetty container -->
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webApp>
						<contextPath>/rest/v1</contextPath>
					</webApp>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>